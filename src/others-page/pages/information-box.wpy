<template>
  <view>
    <view class="box-container">
      <view class="box-hide" hidden="{{!noInfo}}">
        <view class="box-hide-content">目前还没有收到消息哦</view>
      </view>
      <view class="box-top" hidden="{{noInfo}}">
        <view class="box-container-top">
          <view>消息列表</view>
          <view class="all-read" @tap="allRead"></view>
          <view class="delete" @tap="Delete"></view>
        </view>
      </view>
      <view hidden="{{noInfo}}">
        <repeat for="{{info}}" index="index" key="key" item="item">
          <view class="{{item.read ? 'box-item-read' : 'box-item-unread'}}">
            <view class="box-item-container">
              <view class="box-item-in">
                <view class="lines" style="font-size:34rpx;padding-top:20rpx;color:#353535;font-weight:bold;">
                  <view wx:if="{{!item.read}}" class="dot"></view>{{item.title}}
                </view>
                <view class="lines">{{item.content}}</view>
                <view class="lines" style="color:#888888;font-size:24rpx;">{{item.creatDate}}</view>
              </view>
              <view class="right-line"></view>              
            </view>
          </view>
        </repeat>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from "wepy";

export default class extends wepy.page {
  config = {
    navigationBarTitleText: "消息盒子"
  };
  data = {
    noInfo: true,
    background: [
      "https://static.airbob.org/under-graduate/un-read.png",
      "https://static.airbob.org/under-graduate/read.png",
      "https://static.airbob.org/under-graduate/already-read.png"
    ],
    info: []
  };
  methods = {
    allRead() {
      let that = this;
      wepy
        .showModal({
          title: "全标为已读",
          content: "将所有消息标记为已读",
          confirmColor: "#47CFF5"
        })
        .then(response => {
          if (response.confirm) {
            wepy
              .request({
                url:
                  that.$parent.globalData.requestUrl +
                  that.$parent.globalData.config.getOwnMessageAlready,
                method: "PUT"
              })
              .then(res => {
                if (res.data.success) {
                  for (let i of that.info) {
                    i.read = true;
                  }
                  wepy.showToast({
                    title: "已全部已读",
                    icon: "success",
                    duration: 2000
                  });
                  that.$apply();
                } else {
                  wepy.showToast({
                    title: "不知道为什么失败了呢",
                    icon: "none",
                    duration: 2000
                  });
                }
              });
          }
        });
    },
    Delete() {
      let that = this;
      wepy
        .showModal({
          title: "清空消息列表",
          content: "消息列表将被清空",
          confirmColor: "#47CFF5"
        })
        .then(response => {
          if (response.confirm) {
            wepy
              .request({
                url:
                  that.$parent.globalData.requestUrl +
                  that.$parent.globalData.config.getOwnMessageClear,
                method: "PUT"
              })
              .then(res => {
                if (res.data.success) {
                  wepy.showToast({
                    title: "已清空",
                    icon: "success",
                    duration: 2000
                  });
                  this.info = [];
                  this.noInfo = true;
                  this.$apply();
                } else {
                  wepy.showToast({
                    title: "不知道为什么失败了呢",
                    icon: "none",
                    duration: 2000
                  });
                }
              });
          }
        });
    }
  };
  dealTheDate(time) {
    time = time / 1000;
    if (time <= 0) return;
    if (time < 60) {
      return time + " 秒前";
    } else if (time < 3600) {
      return ~~(time / 60) + " 分钟前";
    } else if (time < 86400) {
      return ~~(time / 3600) + " 小时前";
    } else {
      return ~~(time / 86400) + " 天前";
    }
  }
  async onLoad() {
    let that = this;
    let res = await wepy.request({
      url:
        this.$parent.globalData.requestUrl +
        this.$parent.globalData.config.getOwnMessage
    });
    let info = [];
    if (res.data.success) {
      let data = [];
      for (let i of res.data.data) {
        i.creatDate = that.dealTheDate(~~(Date.now() - i.createDate));
        if (i.enable) {
          info.unshift(i);
          if (!i.read) {
            data.unshift(i);
          }
        }
      }
      that.isNewInfo = data.length !== 0;
    }
    that.info = info;
    if (that.info[0]) {
      that.noInfo = false;
    }
    that.$apply();
  }
}
</script>

<style lang="stylus" scoped>
.box-hide
  position relative
  width 500rpx
  height 400rpx
  top 250rpx
  background-image url('https://static.airbob.org/under-graduate/%E7%BC%BA%E7%9C%81%E9%A1%B5_%E7%A9%BA.png')
  background-position center
  background-repeat no-repeat
  background-size contain
  margin 0 auto
  .box-hide-content
    position relative
    width 500rpx
    text-align center
    top 400rpx
    font-size 30rpx
    color #E3E3E3

.box-top
  width 710rpx
  margin 0 auto
  border-bottom 2rpx solid #E3E3E3
  padding 30rpx 0
  .box-container-top
    display flex
    align-items center
    font-size 30rpx
    .all-read
      position absolute
      right 125rpx
      width 40rpx
      height 40rpx
      background-image url('https://static.airbob.org/under-graduate/already-read.png')
      background-position center
      background-repeat no-repeat
      background-size contain
    .delete
      position absolute
      right 45rpx
      width 40rpx
      height 40rpx
      background-image url('https://static.airbob.org/under-graduate/%E6%B8%85%E7%A9%BA.png')
      background-position center
      background-repeat no-repeat
      background-size contain

.box-item-read
  width 700rpx
  min-height 150rpx
  margin-top 30rpx
  margin-left 25rpx
  background #F5F5F5
  border-radius 15rpx
  color #888888
  display flex
  align-items center
  font-size 24rpx
  .box-item-container
    width 700rpx
    .box-item-in
      width 620rpx
      margin 0 auto
      .lines
        overflow hidden
        padding-bottom 20rpx
        font-size 28rpx        

.box-item-unread
  width 700rpx
  min-height 150rpx
  margin-top 30rpx
  margin-left 25rpx
  background #D8D8D8
  background-image linear-gradient(-225deg, #E5F4FF 0%, #E8FBFF 100%)
  border-radius 15rpx
  color #353535
  font-size 24rpx
  .box-item-container
    width 700rpx
    display flex
    .box-item-in
      min-height 150rpx
      width 620rpx
      display flex
      align-items center
      flex-wrap wrap
      margin 0 auto
      .lines
        flex-grow 0
        width 620rpx
        overflow hidden
        padding-bottom 20rpx
        font-size 28rpx
        .dot
          background #47CFF5
          width 15rpx
          height 15rpx
          margin-right 15rpx
          display inline-block
          border-radius 50%
    .right-line
      width 14rpx
      min-height 150rpx
      background #47CFF5
      overflow hidden
      border-top-right-radius 15rpx
      border-bottom-right-radius 15rpx
</style>
